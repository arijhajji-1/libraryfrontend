#!/bin/sh
. "$(dirname -- "$0")/_/husky.sh"

message="$(cat $1)"
requiredPattern="^\[(PL-[0-9]{1,3}|NO-TICKET)\] (Fix|Feat|Chore|Test|Revert|Build|Refactor|Docs): .*$"

if ! [[ $message =~ $requiredPattern ]]; then
  echo " ---- "
  echo " "
  echo "┌---------------------------------┐"
  echo "| 🚨👇 Wrong commit message! 👇🚨 |"
  echo "└---------------------------------┘"
  echo " "
  echo "The commit message must have this format:"
  echo "[PL-000|NO-TICKET] Fix|Feat|Chore|Test|Revert|Build|Refactor|Docs: short message of what has been done"
  echo " "
  echo "* Use 'Fix' for bug fixes or hotfixes."
  echo "* Use 'Feat' for new features."
  echo "* Use 'Chore' for non-user-visible changes (refactoring, dependencies updates, tests, etc.)."
  echo "* Use 'Test' for adding or updating tests."
  echo "* Use 'Refactor' for code restructuring without behavior changes."
  echo "* Use 'Build' for changes affecting the build system, dependencies, CI/CD pipeline, etc."
  echo "* Use 'Docs' for documentation updates."
  echo " "
  echo "Examples:"
  echo "✅ [PL-259] Feat: Add Home Page"
  echo "✅ [PL-000] Fix: Fix bug in Home Page"
  echo "✅ [NO-TICKET] Chore: Update TypeScript version"
  echo "✅ [NO-TICKET] Refactor: Introduce a new hook for fetching data"
  echo "✅ [NO-TICKET] Build: Update dependencies and fix build"
  echo "✅ [NO-TICKET] Docs: Update README/Update JSDoc"
  echo " "
  echo "For more information, check the script in .husky/commit-msg"
  echo " "
  echo "┌---------------------------------┐"
  echo "| 🚨👆 Wrong commit message! 👆🚨 |"
  echo "└---------------------------------┘"
  echo " "
  exit 1
fi
